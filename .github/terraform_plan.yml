name: terraform-plan

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: ci-session
          aws-region: ap-northeast-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0

      - name: setup tfcmt
        env:
          TFCMT_VERSION: v4.10.0
        run: |
          wget "https://github.com/suzuki-shunsuke/tfcmt/releases/download/${TFCMT_VERSION}/tfcmt_linux_amd64.tar.gz" -O /tmp/tfcmt.tar.gz
          tar xzf /tmp/tfcmt.tar.gz -C /tmp
          mv /tmp/tfcmt /usr/local/bin
          tfcmt --version

      - name: Set environment variables
        env:
          TF_VAR_shared_prefix: ${{ secrets.SHARED_PREFIX }}
        run: echo "Environment variables set"

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        id: plan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        working-directory: "./env/prod"
        run: tfcmt -var target:env/prod plan -patch=false --skip-no-changes -- terraform plan -no-color -detailed-exitcode -out=tfplan.plan

      - name: Save Artifact
        if: ${{ steps.plan.outcome == 'success' && steps.plan.outputs.exitcode == '2' }}
        id: save-artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.number }}-${{ github.repository }}-tf-plan
          path: env/prod/tfplan.plan
